<project default="dist" name="ant-get-free-port" xmlns:ivy="antlib:org.apache.ivy.ant">
    <import file="../commons-build/build-common.xml"/>
    <import file="../commons-build/build-ivy.xml"/>

    <property name="src" value="${basedir}/src"/>
    <property name="test-src" value="${basedir}/test"/>

    <property name="build" location="${basedir}/build"/>
    <property name="build.classes" location="${build}/classes"/>
    
    <property name="lib" value="${basedir}/lib"/>
    <property name="lib.compile" location="${lib}/compile"/>
    <property name="lib.build" location="${lib}/build"/>
    <property name="reports" location="${build}/reports"/>
    <property name="reports.ivy" location="${reports}/ivy"/>
    <property name="sonar-work-dir" location="${build}/sonar"/>

    <property name="dist" value="${build}/dist"/>
    <property name="client.jar" value="ant-get-free-port.jar"/>
    
    <path id="lib.compile.path">
        <fileset dir="${lib.compile}" includes="*.jar"/>
    </path>

    <path id="lib.build.path">
        <fileset dir="${lib.build}" includes="*.jar"/>
    </path>

    <!-- Begin ivy functions -->
    <target name="resolve" depends="init-ivy" description="retrieve dependencies with ivy">
        <mkdir dir="${lib}"/>
        <ivy:retrieve pattern="${lib}/[conf]/[artifact]-[revision].[ext]"/>
    </target>

    <target name="repreport" depends="resolve" description="repository dependency report">
        <mkdir dir="${reports.ivy}"/>
        <ivy:report todir="${reports.ivy}"/>
    </target>

    <!-- if you change this target, please also change the next one -->
    <target name="publish" depends="dist" description="Publish artifacts to repository">
        <ivy:publish resolver="backstop" overwrite="true">
            <artifacts pattern="${dist}/[artifact].[ext]"/>
        </ivy:publish>
    </target>

    <!-- if you change this target, please also change the prior one -->
    <target name="publish-hudson" depends="dist,sonar" description="Publish artifacts to repository">
        <ivy:publish resolver="hudson" overwrite="true">
            <artifacts pattern="${dist}/[artifact].[ext]"/>
        </ivy:publish>
    </target>
    <!-- End ivy functions -->

    <target name="init" depends="init-common,resolve">
        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
    	<mkdir dir="${dist}"/>
    </target>
    
    <target name="clean-artifacts" description="Clean up only generated artifacts">
        <delete dir="${build}"/>
    </target>

    <target name="clean" description="Clean up after building" depends="clean-artifacts">
        <delete dir="${lib}"/>
    </target>
    
    <target name="compile" depends="init" description="Compile project">
        <javac destdir="${build.classes}" srcdir="${src}" includes="**" debug="true" target="1.5">
            <classpath refid="lib.compile.path"/>
        </javac>
    </target>

    <target name="jar" depends="compile" description="Create library">
    	<jar destfile="${dist}/${client.jar}">
            <fileset dir="${build.classes}">
                <include name="com/backstopsolutions/ant/**"/>
            </fileset>
        </jar>
    </target>

    <target name="dist" depends="clean,jar" description="Create new distribution"/>

    <!-- Sonar -->
    <path id="sonar.classpath">
        <pathelement location="${lib.build}/sonar-ant-task-1.0.jar" />
    </path>
    
    <target name="sonar" depends="resolve,-sonar-java-props">
        <taskdef resource="org/sonar/ant/antlib.xml">
            <classpath refid="sonar.classpath"/>
        </taskdef>

        <property name="sonar.dynamicAnalysis" value="reuseReports"/>
        <property name="sonar.projectName" value="Ant Get Free Port"/>

        <sonar workDir="${sonar-work-dir}" key="com.backstopsolutions:Ant Get Free Port" version="${backstop.sonar.version}">
            <!-- source directories (required) -->
            <sources>
                <path location="${src}"/>
            </sources>

            <!-- test source directories (optional) -->
            <tests>
                <path location="${test-src}"/>
            </tests>

            <!-- binaries directories, which contain for example the compiled Java bytecode (optional) -->
            <binaries>
                <path location="${build.classes}"/>
            </binaries>
        </sonar>
    </target>
</project>
